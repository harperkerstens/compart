.App {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh; /* Full viewport height */
  width: 100vw; /* Full viewport width */
  background-color: black; /* Ensure the background color is black */
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

#canvasWidth {
  margin-right: 10px;
}

#canvasHeight {
  margin-right: 10px;
}

button {
  margin-right: 10px;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}



body {
  background-color: black; /* Set page background to black */
}

.canvas {
  background-color: white; /* Canvas background to white */
  width: 50vw; /* Half the viewport width */
  height: 50vh; /* Half the viewport height */
  display: block;
  margin: 0 auto; /* Keep horizontal centering */
  margin-top: 50px; /* Add space between the canvas and the top of the page */
  /* Alternatively, you could use padding-top on a parent container if applicable */
}

.clearButton {
  /* display: block; /* Ensure the button is a block-level element to appear on a new line */
  /* margin: 20px auto; /* Position the button below the canvas and center it horizontally */
  /* Other styles remain unchanged */
}

.controls {
  display: flex; /* Enable flexbox to align items in a row */
  justify-content: center; /* Center the controls horizontally */
  margin-top: 20px; /* Add space between the canvas and the controls */
  gap: 10px; /* Optional: add some space between the controls */
}